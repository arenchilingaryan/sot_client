{"version":3,"sources":["context/auth.context.tsx","components/spinner/spinner.js","redux/reducers/profile.reducer.tsx","components/routes/router.js","redux/reducers/menu.reducer.js","redux/reducers/menu.mobile.reducer.js","components/header/header.tsx","components/header/header.container.tsx","app.js","hooks/auth.hook.js","serviceWorker.js","redux/reducers/rootReducer.js","index.js"],"names":["noop","AuthContext","createContext","token","userId","userCount","email","userName","login","logout","isAuthenticated","Spinner","className","initialState","_id","img","birthday","languages","phoneNumber","locationProfile","about","edit","age","history","setProfileEdit","type","setProfileData","data","updateProfileData","form","updateProfileImg","profileReducer","state","action","user","phone","AuthRoutes","lazy","UnAuthRoutes","open","Header","props","menu","auth","mobileMenu","toggleMenuType","toggleMobileMenu","logoutHandler","onClick","to","icon","faFileInvoiceDollar","faPlusSquare","faHome","faUserCircle","style","display","connect","dispatch","useContext","event","preventDefault","toggleMenu","useState","setToken","setUserId","setUserCount","setEmail","setUserName","useCallback","jwtToken","id","count","userEmail","localStorage","setItem","JSON","stringify","removeItem","useEffect","parse","getItem","useAuth","routes","fallback","useRoutes","Provider","value","Boolean","window","location","hostname","match","combineReducers","profilePage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f06f17f9.chunk.js","sourcesContent":["import { createContext } from 'react'\nimport { IAuthContext } from '../interfaces/interfaces';\n\nfunction noop () {}\n\nexport const AuthContext = createContext<IAuthContext>({\n    token: '',\n    userId: '',\n    userCount: 0,\n    email: '',\n    userName: '',\n    login: noop,\n    logout: noop,\n    isAuthenticated: false\n})","import React from 'react'\nimport './spinner.scss'\n\nexport function Spinner() {\n    return (\n        <div className=\"spinner__body\">\n            <div className=\"spinner__loader\"></div>\n        </div>\n        \n    )\n}\n","import { IProfileData } from '../../interfaces/interfaces'\nexport { };\n\nconst initialState: IProfileData = {\n    _id: '',\n    img: '',\n    userName: '',\n    birthday: '',\n    languages: '',\n    email: '',\n    phoneNumber: '',\n    locationProfile: '',\n    about: '',\n    edit: false,\n    age: '',\n    history: []\n}\n\nexport const setProfileEdit = () => ({ type: 'TOGGLE_PROFILE_EDIT' })\nexport const setProfileData = (data: IProfileData) => ({ type: 'SET_PROFILE_DATA', data })\nexport const updateProfileData = (form: IProfileData) => ({ type: 'UPDATE_PROFILE_DATA', form })\nexport const updateProfileImg = (img: string) => ({ type: 'UPDATE_PROFILE_IMG', img })\n\n\nexport default function profileReducer(state = initialState, action: any) {\n    switch (action.type) {\n        case 'TOGGLE_PROFILE_EDIT':\n            return { ...state, edit: !state.edit }\n        case 'SET_PROFILE_DATA': {\n            const { user, history } = action.data\n            const { _id, birthday, languages, email, phoneNumber, locationProfile, about, age, userName, img } = user\n            return {\n                ...state,\n                _id,\n                img,\n                userName,\n                birthday,\n                languages,\n                email,\n                phoneNumber,\n                locationProfile,\n                about,\n                edit: false,\n                history,\n                age\n            }\n        }\n        case 'UPDATE_PROFILE_DATA': {\n            const { birthday, languages, phone, locationProfile, about, age, userName } = action.form\n            return {\n                ...state,\n                userName,\n                birthday,\n                languages,\n                phoneNumber: phone,\n                locationProfile,\n                about,\n                edit: false,\n                age\n            }\n        }\n        case 'UPDATE_PROFILE_IMG': {\n            return { ...state, img: action.img }\n        }\n\n        default: return state\n    }\n}","import React, { lazy, Suspense } from 'react'\nimport { Spinner } from '../spinner/spinner'\nimport '../../UI/transition.scss'\n\nconst AuthRoutes = lazy(() => import('./routes.auth'))\nconst UnAuthRoutes = lazy(() => import('./routes.unAuth'))\n\n\nexport const useRoutes = (isAuthenticated) => {\n\n\n\n    if (isAuthenticated) {\n        return (\n            <div className=\"page page__mobile\" >\n                <Suspense fallback={<Spinner />}>\n                    <AuthRoutes />\n                </Suspense>\n            </div>\n        )\n    }\n\n    return (\n\n        <div className=\"page page__mobile\" >\n            <Suspense fallback={<Spinner />}>\n                <UnAuthRoutes />\n            </Suspense>\n        </div>\n    )\n}","const initialState = {\n    open: false\n}\n\nexport const toggleMenu = () => ({ type: 'TOGGLE__MENU' })\n\nexport default function menuReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'TOGGLE__MENU': return { open: !state.open }\n        default: return state\n    }\n}","const initialState = {\n    open: false\n}\n\nexport const toggleMobileMenu = () => ({ type: 'TOGGLE__MOBILE__MENU' })\n\nexport default function mobileMenuReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'TOGGLE__MOBILE__MENU': return { open: !state.open }\n        default: return state\n    }\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faUserCircle,\n  faHome,\n  faFileInvoiceDollar,\n  faPlusSquare,\n} from '@fortawesome/free-solid-svg-icons'\nimport './header.scss'\nimport { IAuthContext } from '../../interfaces/interfaces'\n\ntype HeaderProps = {\n  menu: boolean\n  mobileMenu: boolean\n  auth: IAuthContext\n  toggleMenuType: () => void\n  toggleMobileMenu: () => void\n  logoutHandler: any\n}\n\nconst Header: React.FC<HeaderProps> = props => {\n  const { menu, auth, mobileMenu, toggleMenuType, toggleMobileMenu, logoutHandler } = props\n  return (\n    <div>\n      <nav className={menu ? \"header header__open\" : \"header\"}>\n        <ul className=\"header__items\">\n          <li>&#160;&#160;&#160;</li>\n          {auth.email === null ? null : <li onClick={toggleMenuType} > <NavLink className=\"header__nav\" to=\"/me\">My Account</NavLink> </li>}\n          {auth.token ? <li onClick={toggleMenuType}> <NavLink className=\"header__nav\" to=\"/select\">Select Options</NavLink> </li> : null}\n          {auth.email === null ? <li onClick={toggleMenuType} > <NavLink className=\"header__nav\" to=\"/\">Home</NavLink> </li> : null}\n          <li onClick={toggleMenuType}> <NavLink className=\"header__nav\" to=\"/faq\">FAQ</NavLink> </li>\n          <li onClick={toggleMenuType}> <NavLink className=\"header__nav\" to=\"/about\">About Us</NavLink> </li>\n          <li onClick={toggleMenuType}> <NavLink className=\"header__nav\" to=\"/support\">Support</NavLink> </li>\n          {auth.email === null ? null : <li onClick={toggleMenuType} className=\"header__nav subNav\">{auth.userName}: {auth.userCount} $</li>}\n          {auth.email === null ? null : <li onClick={toggleMenuType}> <NavLink className=\"header__nav\" onClick={logoutHandler} to=\"/logout\">Logout</NavLink> </li>}\n        </ul>\n      </nav>\n      <nav className=\"header__mobile\">\n        <ul className=\"header__mobile-items\">\n          {auth.token ? <li> <NavLink className=\"header__mobile__nav\" to=\"/prices\"><FontAwesomeIcon icon={faFileInvoiceDollar} /></NavLink> </li> : null}\n          {auth.token ? <li> <NavLink className=\"header__mobile__nav\" to=\"/work\"><FontAwesomeIcon icon={faPlusSquare} /></NavLink> </li> : null}\n          {auth.email === null ? <li> <NavLink className=\"header__mobile__nav\" to=\"/\"><FontAwesomeIcon icon={faHome} /></NavLink> </li> : null}\n          {auth.email === null ? null : <li> <NavLink className=\"header__mobile__nav\" to=\"/me\"><FontAwesomeIcon icon={faUserCircle} /></NavLink> </li>}\n        </ul>\n        <div className=\"settings__mobile\">\n          <div className=\"settings__mobile__icon\" onClick={toggleMobileMenu}>\n            <span></span>\n          </div>\n          <ul className=\"settings__mobile__open\" style={mobileMenu ? { display: 'block' } : { display: 'none' }} >\n            {auth.email === null ? null : <li onClick={toggleMobileMenu} > <NavLink className=\"header__nav\" to=\"/me\">My Account</NavLink> </li>}\n            {auth.token ? <li onClick={toggleMobileMenu}> <NavLink className=\"header__nav\" to=\"/select\">Select Options</NavLink> </li> : null}\n            {auth.email === null ? <li onClick={toggleMobileMenu} > <NavLink className=\"header__nav\" to=\"/\">Home</NavLink> </li> : null}\n            <li onClick={toggleMobileMenu}> <NavLink className=\"header__nav\" to=\"/faq\">FAQ</NavLink> </li>\n            <li onClick={toggleMobileMenu}> <NavLink className=\"header__nav\" to=\"/support\">Support</NavLink> </li>\n            <li onClick={toggleMobileMenu}> <NavLink className=\"header__nav\" to=\"/about\">About Us</NavLink> </li>\n            {auth.email === null ? null : <li onClick={toggleMobileMenu} className=\"header__nav subNav\">{auth.userName}: {auth.userCount} $</li>}\n            {auth.email === null ? null : <li onClick={toggleMobileMenu}> <NavLink className=\"header__nav\" onClick={logoutHandler} to=\"/logout\">Logout</NavLink> </li>}\n          </ul>\n        </div>\n      </nav>\n    </div>\n\n  )\n}\n\n\nexport default Header\n\n\n// localStorage.setItem('userData', JSON.stringify({userId: '5eb326698a36493415fce61e', token: '91d98829jd1j898921je128e81d8989j12j8d8912e812ijd2198dj129d8', userCount: 95, email: 'arenchilingaryan@yandex.ru', userName: 'privet'}))\n","import React, { useContext } from 'react'\nimport { AuthContext } from '../../context/auth.context'\nimport { connect } from 'react-redux'\nimport { toggleMenu } from '../../redux/reducers/menu.reducer'\nimport { toggleMobileMenu } from '../../redux/reducers/menu.mobile.reducer'\nimport Header from './header'\nimport './header.scss'\n\n\n\nconst HeaderContainer = (props: any) => {\n  const auth = useContext(AuthContext)\n\n  function logoutHandler(event: React.MouseEvent) {\n    event.preventDefault()\n    auth.logout()\n  }\n\n  return <Header\n    menu={props.menu}\n    mobileMenu={props.mobileMenu}\n    auth={auth}\n    toggleMenuType={props.toggleMenuType}\n    toggleMobileMenu={props.toggleMobileMenu}\n    logoutHandler={logoutHandler}\n  />\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    menu: state.menu.open,\n    mobileMenu: state.mobileMenu.open\n  }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    toggleMenuType: () => dispatch(toggleMenu()),\n    toggleMobileMenu: () => dispatch(toggleMobileMenu())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)\n\n\n// localStorage.setItem('userData', JSON.stringify({userId: '5eb326698a36493415fce61e', token: '91d98829jd1j898921je128e81d8989j12j8d8912e812ijd2198dj129d8', userCount: 95, email: 'arenchilingaryan@yandex.ru', userName: 'privet'}))\n","import React from 'react'\nimport { useAuth } from './hooks/auth.hook'\nimport { useRoutes } from './components/routes/router'\nimport { AuthContext } from './context/auth.context'\nimport { connect } from 'react-redux'\nimport { toggleMenu } from './redux/reducers/menu.reducer'\nimport HeaderContainer from './components/header/header.container'\nimport './app.scss'\n\n\nfunction App(props) {\n\n\n  const { token, login, logout, userId, userCount, email, userName } = useAuth()\n\n  const isAuthenticated = !!token\n\n  const routes = useRoutes(isAuthenticated)\n\n  return (\n    <AuthContext.Provider value={{\n      token, userId, userCount, email, login, logout, userName, isAuthenticated\n    }}>\n        <div className=\"app__wrapper\">\n          <HeaderContainer />\n          <h1 className=\"menu__button\" onClick={props.toggleMenu} > MENU </h1>\n          {routes}\n        </div>\n    </AuthContext.Provider>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    menu: state\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    toggleMenu: () => dispatch(toggleMenu())\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { useState, useCallback, useEffect } from 'react'\n\nconst storageName = 'userData'\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(null)\n    const [userId, setUserId] = useState(null)\n    const [userCount, setUserCount] = useState(null)\n    const [email, setEmail] = useState(null)\n    const [userName, setUserName] = useState(null)\n\n\n    const login = useCallback((jwtToken, id, count, userEmail, userName) => {\n        // Set data of login-button for drop to state and localstore\n        setToken(jwtToken)\n        setUserId(id)\n        setUserCount(count)\n        setEmail(userEmail)\n        setUserName(userName)\n        localStorage.setItem(storageName, JSON.stringify({\n            userId: id, \n            token: jwtToken, \n            userCount: count, \n            email: userEmail, \n            userName: userName\n        }))\n    }, [])\n    const logout = useCallback(() => {\n        // Remove state and localstorage\n        setToken(null)\n        setUserId(null)\n        setUserCount(null)\n        setEmail(null)\n        setUserName(null)\n        localStorage.removeItem(storageName)\n    }, [])\n\n    useEffect(() => {\n        // Add data of localstore to auth-context\n        const data = JSON.parse(localStorage.getItem(storageName))\n        if (data && data.token) {\n            login(data.token, data.userId, data.userCount, data.email, data.userName)\n        }\n    }, [login])\n\n    return { login, logout, token, userId, userCount, email, userName }\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux'\nimport menuReducer from './menu.reducer'\nimport profileReducer from './profile.reducer'\nimport mobileMenuReducer from './menu.mobile.reducer'\n\nexport default combineReducers({\n    menu: menuReducer,\n    profilePage: profileReducer,\n    mobileMenu: mobileMenuReducer\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport 'antd/dist/antd.css'\nimport App from './app'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './redux/reducers/rootReducer'\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware()\n  )\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}