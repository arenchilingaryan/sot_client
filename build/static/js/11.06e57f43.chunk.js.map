{"version":3,"sources":["components/auth/get-started.tsx","components/routes/routes.unAuth.js","hooks/memo.component.tsx","components/redirect/redirect.js"],"names":["memoComponent","useEffect","axios","get","then","res","location","data","geoplugin_city","post","className","itemScope","itemType","itemProp","to","Registration","lazy","FAQ","Support","AboutPage","Login","connect","state","menu","open","mobileMenu","props","style","transformOrigin","transform","render","TransitionGroup","CSSTransition","key","timeout","classNames","path","exact","component","GetStarted","fallback","OtherLogout","Component","memo","prevProps","nextProps","OtherLogin"],"mappings":"8NA2CeA,eArCc,WAUzB,OARAC,qBAAU,WACNC,IAAMC,IAAI,gCAAgCC,MAAK,SAAAC,GAC3C,IAAMC,EAAWD,EAAIE,KAAKC,eAC1BN,IAAMO,KAAK,aAAc,CAAEH,kBAEhC,IAIC,yBAAKI,UAAU,QACX,yBAAKA,UAAU,oBACX,yBAAKC,WAAS,EAACC,SAAS,wCAAwCF,UAAU,iCACtE,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIG,SAAS,QAAb,gBAEJ,yBAAKA,SAAS,cAAcH,UAAU,kBAClC,uIAEA,4HAEA,yLAEJ,yBAAKA,UAAU,oBACX,kBAAC,IAAD,CAASI,GAAG,SAASJ,UAAU,oBAA/B,WACA,kBAAC,IAAD,CAASI,GAAG,YAAYJ,UAAU,oBAAlC,mB,gBCvBtBK,G,MAAeC,gBAAK,kBAAM,iEAC1BC,EAAMD,gBAAK,kBAAM,iCACjBE,EAAUF,gBAAK,kBAAM,kCACrBG,EAAYH,gBAAK,kBAAM,iCACvBI,EAAQJ,gBAAK,kBAAM,wDA8EVK,uBARf,SAAyBC,GACrB,MAAO,CACHC,KAAMD,EAAMC,KAAKC,KACjBC,WAAYH,EAAMG,WAAWD,QAKtBH,EA5Ef,SAAsBK,GAOlB,OACI,yBAAKhB,UAAWgB,EAAMH,KAAO,kBAAoB,OAC7CI,MAAOD,EAAMD,WARO,CACxBG,gBAAiB,YACjBC,UAAW,+CAMyC,MAChD,kBAAC,IAAD,CAAOC,OAAQ,YAAmB,IAAhBxB,EAAe,EAAfA,SACd,OACI,kBAACyB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,IAAK3B,EAAS2B,IACdC,QAAS,IACTC,WAAW,QAEX,kBAAC,IAAD,CAAQ7B,SAAUA,GAEd,kBAAC,IAAD,CAAO8B,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,SAASN,OAAQ,WACzB,OACI,kBAAC,WAAD,CAAUU,SAAU,kBAAC,IAAD,OAChB,kBAACpB,EAAD,UAIZ,kBAAC,IAAD,CAAOgB,KAAK,YAAYN,OAAQ,WAC5B,OACI,kBAAC,WAAD,CAAUU,SAAU,kBAAC,IAAD,OAChB,kBAACzB,EAAD,UAIZ,kBAAC,IAAD,CAAOqB,KAAK,OAAON,OAAQ,WACvB,OACI,kBAAC,WAAD,CAAUU,SAAU,kBAAC,IAAD,OAChB,kBAACvB,EAAD,UAIZ,kBAAC,IAAD,CAAOmB,KAAK,SAASN,OAAQ,WACzB,OACI,kBAAC,WAAD,CAAUU,SAAU,kBAAC,IAAD,OAChB,kBAACrB,EAAD,UAIZ,kBAAC,IAAD,CAAOiB,KAAK,WAAWN,OAAQ,WAC3B,OACI,kBAAC,WAAD,CAAUU,SAAU,kBAAC,IAAD,OAChB,kBAACtB,EAAD,UAIZ,kBAAC,IAAD,CAAOoB,UAAWG,iB,gCCxElD,6CAEO,SAASzC,EAAe0C,GAI7B,OAAOC,eAAKD,GAHZ,SAAkBE,EAAgBC,GAChC,OAAO,O,gCCJX,+FAGO,SAASC,IACZ,OAAO,kBAAC,IAAD,CAAUhC,GAAG,YAGjB,SAAS2B,IACZ,OAAO,kBAAC,IAAD,CAAU3B,GAAG,Q","file":"static/js/11.06e57f43.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport axios from 'axios'\nimport './get-started.scss'\nimport { memoComponent } from '../../hooks/memo.component';\n\nconst GetStarted: React.FC = () => {\n\n    useEffect(() => {\n        axios.get('http://geoplugin.net/json.gp').then(res => {\n            const location = res.data.geoplugin_city\n            axios.post('/api/visit', { location })\n        })\n    }, [])\n\n\n    return (\n        <div className='page'>\n            <div className=\"starting__inside\">\n                <div itemScope itemType=\"http://schema.org/SoftwareApplication\" className=\"inside__page starting__inside\">\n                    <div className=\"starting__inside\">\n                        <div className=\"starting__center\">\n                            <h1 itemProp=\"name\">Shot On Top</h1>\n                        </div>\n                        <div itemProp=\"description\" className=\"starting__text\">\n                            <p>Shot on Top is a world project which can help   to creative and talented people become heard and famous.</p>\n\n                            <p>Shot on Top works on the Triller platform where you can promote your publications to the top.</p>\n\n                            <p> Together with Shot on Top, you can increase the reach of your target audience, as well as the number of views and likes under posts in the Triller app. </p>\n                        </div>\n                        <div className=\"starting__center\">\n                            <NavLink to=\"/login\" className=\"starting__button\">Sign In</NavLink>\n                            <NavLink to=\"/register\" className=\"starting__button\">Sign Up</NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default memoComponent(GetStarted)","import React, { lazy, Suspense } from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport { Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport GetStarted from '../auth/get-started'\nimport { OtherLogout } from '../redirect/redirect'\nimport { Spinner } from '../spinner/spinner'\nimport './routes.scss'\n\n\nconst Registration = lazy(() => import('../auth/auth/registration'))\nconst FAQ = lazy(() => import('../faq/faq'))\nconst Support = lazy(() => import('../support/support'))\nconst AboutPage = lazy(() => import('../about/about'))\nconst Login = lazy(() => import('../auth/auth/login'))\n\nfunction UnAuthRoutes(props) {\n    const mobileMenuStyleOpen = {\n        transformOrigin: 'right top',\n        transform: 'perspective(500px) rotate(45deg) scale(2.5)',\n    }\n\n\n    return (\n        <div className={props.menu ? \"menu menu__open\" : \"menu\"}\n            style={props.mobileMenu ? mobileMenuStyleOpen : null}>\n            <Route render={({ location }) => {\n                return (\n                    <TransitionGroup>\n                        <CSSTransition\n                            key={location.key}\n                            timeout={300}\n                            classNames=\"fade\"\n                        >\n                            <Switch location={location} >\n\n                                <Route path=\"/\" exact component={GetStarted} />\n                                <Route path=\"/login\" render={() => {\n                                    return (\n                                        <Suspense fallback={<Spinner />}>\n                                            <Login />\n                                        </Suspense>\n                                    )\n                                }} />\n                                <Route path=\"/register\" render={() => {\n                                    return (\n                                        <Suspense fallback={<Spinner />}>\n                                            <Registration />\n                                        </Suspense>\n                                    )\n                                }} />\n                                <Route path=\"/faq\" render={() => {\n                                    return (\n                                        <Suspense fallback={<Spinner />}>\n                                            <FAQ />\n                                        </Suspense>\n                                    )\n                                }} />\n                                <Route path=\"/about\" render={() => {\n                                    return (\n                                        <Suspense fallback={<Spinner />}>\n                                            <AboutPage />\n                                        </Suspense>\n                                    )\n                                }} />\n                                <Route path=\"/support\" render={() => {\n                                    return (\n                                        <Suspense fallback={<Spinner />}>\n                                            <Support />\n                                        </Suspense>\n                                    )\n                                }} />\n                                <Route component={OtherLogout} />\n\n                            </Switch>\n                        </CSSTransition>\n                    </TransitionGroup>\n                )\n\n            }} />\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        menu: state.menu.open,\n        mobileMenu: state.mobileMenu.open\n    }\n}\n\n\nexport default connect(mapStateToProps)(UnAuthRoutes)","import { memo } from 'react'\n\nexport function memoComponent (Component: any) {\n  function areEqual(prevProps: any, nextProps: any) {\n    return true\n  }\n  return memo(Component, areEqual)\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nexport function OtherLogin() {\n    return <Redirect to=\"/select\" />\n}\n\nexport function OtherLogout() {\n    return <Redirect to=\"/\" />\n}\n"],"sourceRoot":""}