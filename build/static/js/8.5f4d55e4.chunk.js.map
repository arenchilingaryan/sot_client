{"version":3,"sources":["components/support/support.tsx","components/select-page/select-page.tsx","UI/select/select.tsx","components/select-page/work/work.tsx","UI/select/setSelect.tsx","components/select-page/pay-counts/pay-counts.js","components/routes/routes.auth.js","hooks/memo.component.tsx","components/redirect/redirect.js"],"names":["memoComponent","itemScope","itemType","className","itemProp","to","SelectMenu","props","Option","Select","defaultValue","style","width","onChange","value","setParam","select","map","el","key","id","title","Work","useState","error","setError","done","setDone","loading","setLoading","genre","setGenre","auth","useContext","AuthContext","selectArr","i","length","arr","push","setSelect","views","e","a","preventDefault","endCount","userCount","target","attributes","price","body","link","trafic","type","timeSet","time","email","cash","axios","post","headers","Authorization","token","then","res","status","login","userId","color","onSubmit","placeholder","name","PayPage","ProfileContainer","lazy","FAQ","AboutPage","connect","state","menu","open","mobileMenu","transformOrigin","transform","filter","render","location","TransitionGroup","CSSTransition","timeout","classNames","path","component","SelectPage","fallback","Support","OtherLogin","Component","memo","prevProps","nextProps","OtherLogout"],"mappings":"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","file":"static/js/8.5f4d55e4.chunk.js","sourcesContent":["import React from 'react'\nimport './support.scss'\nimport { memoComponent } from '../../hooks/memo.component';\n\nfunction Support() {\n  return (\n    <div itemScope itemType=\"http://schema.org/Organization\" className=\"support__page page\">\n      <h1><strong>Support</strong></h1>\n      <p> For all technical problems, please email: <strong itemProp=\"email\">shotontopofficial@gmail.com</strong></p>\n    </div>\n  )\n}\nexport default memoComponent(Support)","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { memoComponent } from '../../hooks/memo.component';\nimport './select-page.scss'\n\nconst SelectPage = () => {\n    return (\n        <div itemScope itemType=\"http://schema.org/Event\" className=\"selectPage page\">\n            <h1 className=\"selectPage__title\"><span itemProp=\"about\">Please select</span>option</h1>\n            <div className=\"selectPage__buttons\">\n                <NavLink itemProp=\"offers\" className=\"selectPage__button\" to=\"/work\">Start to work</NavLink>\n                <NavLink itemProp=\"offers\" className=\"selectPage__button\" to=\"/prices\">Add Counts</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default memoComponent(SelectPage)\n","import React from 'react'\nimport { Select } from 'antd'\nimport { ISelect } from '../../interfaces/interfaces';\n\ntype SelectProps = {\n    select: ISelect[]\n    setParam: (value: string) => void\n}\n\nexport const SelectMenu: React.FC<SelectProps> = (props) => {\n\n    const { Option } = Select;\n\n    const handleChange = (value: string) => {\n        props.setParam(value)\n    }\n\n    return (\n        <div>\n            <Select defaultValue=\"Select Genre\" style={{ width: 200 }} onChange={handleChange}>\n                {\n                    props.select.map(el => {\n                        return (\n                            <Option key={el.id + el.title} value={el.title}> {el.title}</Option>\n                        )\n                    })\n                }\n            </Select>\n        </div>\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport axios from 'axios'\nimport { NavLink } from 'react-router-dom'\nimport { Spinner } from '../../spinner/spinner'\nimport { SelectMenu } from '../../../UI/select/select'\nimport { setSelect } from '../../../UI/select/setSelect'\nimport { IBodyWork } from '../../../interfaces/interfaces'\nimport { AuthContext } from '../../../context/auth.context'\nimport { memoComponent } from '../../../hooks/memo.component';\nimport './work.scss'\n\n\n\nexport const Work: React.FC = memoComponent(() => {\n    const [error, setError] = useState<string>('')\n    const [done, setDone] = useState<string>('')\n    const [loading, setLoading] = useState<boolean>(false)\n    const [genre, setGenre] = useState<string>('')\n\n    const auth = useContext(AuthContext)\n\n    const select = setSelect('Comedy', 'Dance', 'Fashion', 'Food', 'Lifestyle', 'Music', 'Sports', 'Twerk Team', 'Fitness')\n\n    const views = async (e: any) => {\n        e.preventDefault()\n        setLoading(true)\n        const endCount: number = auth.userCount - e.target.attributes.price.value\n        try {\n            const body: IBodyWork = {\n                link: e.target.link.value,\n                trafic: e.target.attributes.type.value,\n                timeSet: e.target.attributes.time.value,\n                email: auth.email,\n                price: endCount,\n                cash: e.target.attributes.price.value,\n                genre\n            }\n            axios.post(`/api/view`,\n                body,\n                {\n                    headers: {\n                        Authorization: `Bearer ${auth.token}`\n                    }\n                }).then(res => {\n                    if (res.status === 200) {\n                        setLoading(false)\n                        auth.login(auth.token, auth.userId, endCount, auth.email)\n                        setDone(`Your views will be done in 24 hrs`)\n                        setError('')\n                    } else {\n                        setLoading(false)\n                        setError('Page Is Wrong. Try again')\n                        setDone('')\n                    }\n                })\n        } catch (e) {\n\n        }\n    }\n\n    return (\n        <div itemScope itemType=\"http://schema.org/Product\" className=\"page\">\n            <h1 className=\"work__status\" style={{ color: 'red' }} > {error} </h1>\n            <h1 className=\"work__status\" style={{ color: 'green' }} > {done} </h1>\n            {\n                loading\n                    ? <Spinner />\n                    : <div className=\"work__wrapper\" itemProp=\"offers\" itemScope itemType=\"http://schema.org/Offer\">\n                        {\n                            auth.userCount >= 5\n                                ?\n                                //@ts-ignore\n                                <form price=\"5\" time=\"10000\" type=\"1000\" id=\"min-view\" className=\"work__card\" onSubmit={views}>\n                                    <h3 itemProp=\"price\">1000 Views</h3>\n                                    <input placeholder=\"Enter Your Link\" name=\"link\" className=\"login__input\" type=\"text\" />\n                                    <SelectMenu select={select} setParam={setGenre} />\n                                    <button className=\"work__button\">Start</button>\n                                </form>\n                                : <div className=\"work__card\">\n                                    <h1 className=\"work__disableTitle\">Buy coints for 1000 views!</h1>\n                                    <NavLink to=\"/prices\"><button className=\"workPage__buyCountsButton\">Add Counts</button></NavLink>\n                                </div>\n                        }\n\n                        {\n                            auth.userCount >= 10\n                                ?\n                                //@ts-ignore\n                                <form price=\"10\" time=\"10000\" type=\"3000\" id=\"view\" className=\"work__card\" onSubmit={views}>\n                                    <h3 itemProp=\"price\">3000 Views</h3>\n                                    <input placeholder=\"Enter Your Link\" name=\"link\" className=\"login__input\" type=\"text\" />\n                                    <SelectMenu select={select} setParam={setGenre} />\n                                    <button className=\"work__button\">Start</button>\n                                </form>\n                                : <div className=\"work__card\">\n                                    <h1 className=\"work__disableTitle\">3000 Views 10$</h1>\n                                    <NavLink to=\"/prices\"><button className=\"workPage__buyCountsButton\">Add Counts</button></NavLink>\n                                </div>\n                        }\n\n                        {\n                            auth.userCount >= 25\n                                ?\n                                //@ts-ignore\n                                <form price=\"25\" time=\"3000\" type=\"10000\" id=\"max-view\" className=\"work__card\" onSubmit={views}>\n                                    <h3 itemProp=\"price\">10000 Views</h3>\n                                    <input placeholder=\"Enter Your Link\" name=\"link\" className=\"login__input\" type=\"text\" />\n                                    <SelectMenu select={select} setParam={setGenre} />\n                                    <button className=\"work__button\">Start</button>\n                                </form>\n                                : <div className=\"work__card\">\n                                    <h1 className=\"work__disableTitle\">10000 Views 25$</h1>\n                                    <NavLink to=\"/prices\"><button className=\"workPage__buyCountsButton\">Add Counts</button></NavLink>\n                                </div>\n                        }\n                    </div>\n            }\n\n        </div>\n    )\n})","\nexport function setSelect(...params: string[]) {\n    const selectArr = []\n    for (let i = 0; i < params.length; i++) {\n        const arr = { id: i + 1, title: params[i] }\n        selectArr.push(arr)\n    }\n    return selectArr\n}","import React from 'react'\nimport './pay-counts.scss'\n\nexport const PayPage = () => {\n\n    return (\n        <div className=\"page\">\n\n        </div>\n    )\n}","import React, { lazy, Suspense } from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport { Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport SelectPage from '../select-page/select-page'\nimport { Work } from '../select-page/work/work'\nimport { PayPage } from '../select-page/pay-counts/pay-counts'\nimport { OtherLogin } from '../redirect/redirect'\nimport Support from '../support/support'\nimport { Spinner } from '../spinner/spinner'\nimport './routes.scss'\n\nconst ProfileContainer = lazy(() => import('../profile/profile.container'))\nconst FAQ = lazy(() => import('../faq/faq'))\nconst AboutPage = lazy(() => import('../about/about'))\n\n\nfunction AuthRoutes(props) {\n\n    const mobileMenuStyleOpen = {\n        transformOrigin: 'right top',\n        transform: 'perspective(500px) rotate(45deg) scale(2.5)',\n        filter: 'opacity(.5) blur(2px)'\n    }\n    \n    return (\n        <div\n            className={props.menu ? \"menu menu__open\" : \"menu\"}\n            style={props.mobileMenu ? mobileMenuStyleOpen : null} >\n            <Route render={({ location }) => {\n                return (\n                    <TransitionGroup>\n                        <CSSTransition\n                            key={location.key}\n                            timeout={300}\n                            classNames=\"fade\"\n                        >\n                            <Switch location={location} >\n                                <Route path=\"/select\" component={SelectPage} />\n                                <Route path=\"/work\" component={Work} />\n                                <Route path=\"/prices\" component={PayPage} />\n                                <Route path=\"/faq\" render={() => {\n                                    return (\n                                        <Suspense fallback={<Spinner />}>\n                                            <FAQ />\n                                        </Suspense>\n                                    )\n                                }} />\n                                <Route path=\"/about\" render={() => {\n                                    return (\n                                        <Suspense fallback={<Spinner />}>\n                                            <AboutPage />\n                                        </Suspense>\n                                    )\n                                }} />\n                                <Route path=\"/me\" render={() => {\n                                    return (\n                                        <Suspense fallback={<Spinner />}>\n                                            <ProfileContainer />\n                                        </Suspense>\n                                    )\n                                }} />\n                                <Route path=\"/support\" component={Support} />\n                                <Route component={OtherLogin} />\n                            </Switch>\n                        </CSSTransition>\n                    </TransitionGroup>\n                )\n\n            }} />\n        </div>\n    )\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        menu: state.menu.open,\n        mobileMenu: state.mobileMenu.open\n    }\n}\n\nexport default connect(mapStateToProps)(AuthRoutes)","import { memo } from 'react'\n\nexport function memoComponent (Component: any) {\n  function areEqual(prevProps: any, nextProps: any) {\n    return true\n  }\n  return memo(Component, areEqual)\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nexport function OtherLogin() {\n    return <Redirect to=\"/select\" />\n}\n\nexport function OtherLogout() {\n    return <Redirect to=\"/\" />\n}\n"],"sourceRoot":""}