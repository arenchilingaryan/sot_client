{"version":3,"sources":["img/User.jpg","components/profile/profile-edit/profile.edit.form.tsx","components/profile/profile-edit/profile.edit.tsx","components/profile/profile-header/profile.header.tsx","components/profile/profile-info/profile.history.table.tsx","components/profile/profile-info/profile.info.tsx","components/profile/profile-main/profile.main.js.js","components/profile/profile-main/profile.main.container.tsx","components/profile/profile.tsx","components/profile/profile.container.tsx","hooks/http.hook.js"],"names":["module","exports","ProfileEditForm","props","editHandler","changeHandler","form","loading","userName","birthday","phoneNumber","languages","age","about","onSubmit","className","htmlFor","onChange","name","type","value","connect","state","profile","profilePage","dispatch","setData","data","setProfileData","setEdit","setProfileEdit","updateData","updateProfileData","auth","useContext","AuthContext","useHttp","request","_id","email","locationProfile","img","useState","setForm","event","a","preventDefault","Authorization","token","req","user","history","login","userId","userCount","target","ProfileHeader","itemProp","icon","faEdit","onClick","ProfileHistoryTableItem","idx","link","trafic","genre","amount","totalprice","price","rel","href","substr","length","map","el","key","code","ProfileMainInfo","handleFileSelect","src","defaultUser","alt","faFileUpload","id","faEnvelope","faPhoneAlt","faLocationArrow","updateImg","updateProfileImg","evt","f","files","reader","FileReader","onload","e","binaryData","result","base64String","window","btoa","console","log","readAsBinaryString","itemScope","edit","setUserData","useCallback","Error","useEffect","setLoading","error","setError","url","method","body","headers","JSON","stringify","fetch","response","json","ok","message","clearError"],"mappings":"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","file":"static/js/9.c6aaaab0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/User.bff3404e.jpg\";","import React from 'react'\nimport { Spinner } from '../../spinner/spinner'\nimport { IProfileForm } from '../../../interfaces/interfaces';\n\ntype ProfileEditFormProps = {\n  changeHandler: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  editHandler: (event: React.MouseEvent<HTMLButtonElement> | React.FormEvent<HTMLFormElement>) => void\n  form: IProfileForm\n  loading: boolean\n}\n\nconst ProfileEditForm:React.FC<ProfileEditFormProps> = (props) => {\n  const { editHandler, changeHandler, form, loading } = props\n  const { userName, birthday, phoneNumber, languages, age, about } = form\n  return (\n    <form onSubmit={editHandler} className=\"profile__editPage\">\n      <h1>Fill out the required</h1>\n      <div className=\"profile__editForm\">\n        <div className=\"profile__edit-inputBlock\">\n          <label htmlFor=\"userName\">Username&nbsp;:&nbsp;</label>\n          <input onChange={changeHandler} name=\"userName\" type=\"text\" value={userName} className=\"profile__edit-input\" />\n        </div>\n        <div className=\"profile__edit-inputBlock\">\n          <label htmlFor=\"birthday\">Birthday&nbsp;:&nbsp;</label>\n          <input onChange={changeHandler} name=\"birthday\" type=\"text\" value={birthday} className=\"profile__edit-input\" />\n        </div>\n        <div className=\"profile__edit-inputBlock\">\n          <label htmlFor=\"phoneNumber\">Phone Number&nbsp;:&nbsp;</label>\n          <input onChange={changeHandler} name=\"phoneNumber\" type=\"text\" value={phoneNumber} className=\"profile__edit-input\" />\n        </div>\n        <div className=\"profile__edit-inputBlock\">\n          <label htmlFor=\"languages\">Languages&nbsp;:&nbsp;</label>\n          <input onChange={changeHandler} name=\"languages\" type=\"text\" value={languages} className=\"profile__edit-input\" />\n        </div>\n        <div className=\"profile__edit-inputBlock\">\n          <label htmlFor=\"age\">Age&nbsp;:&nbsp;</label>\n          <input onChange={changeHandler} name=\"age\" type=\"text\" value={age} className=\"profile__edit-input\" />\n        </div>\n        <div className=\"profile__edit-inputBlock\">\n          <label htmlFor=\"about\">About me&nbsp;:&nbsp;</label>\n          <textarea onChange={changeHandler} className=\"profile__edit-textarea profile__edit-input\" value={about} name=\"about\" />\n        </div>\n      </div>\n      {\n        loading\n          ? <Spinner />\n          : <button className=\"profile__edit-button\" >Save</button>\n      }\n    </form>\n  )\n}\n\nexport default ProfileEditForm","import React, { useState, useContext } from 'react'\nimport { connect } from 'react-redux'\nimport { IProfileData, IProfileForm } from '../../../interfaces/interfaces'\nimport { setProfileEdit, setProfileData, updateProfileData } from '../../../redux/reducers/profile.reducer'\nimport { useHttp } from '../../../hooks/http.hook'\nimport { AuthContext } from '../../../context/auth.context'\nimport ProfileEditForm from './profile.edit.form'\nimport './profile.edit.scss'\n\nconst ProfileEdit: React.FC = (props: any) => {\n    const auth = useContext(AuthContext)\n    const { request, loading } = useHttp()\n\n    const { _id, about, userName, birthday, languages, email, phoneNumber, locationProfile, age, img } = props.profile\n    const [form, setForm] = useState<IProfileForm>({\n        img,\n        userName,\n        birthday,\n        languages,\n        email,\n        phoneNumber,\n        locationProfile,\n        age,\n        about,\n        _id\n    })\n\n    const changeHandler = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [event.target.name]: (event.target as HTMLInputElement).value })\n    }\n\n    const editHandler = async (event: React.MouseEvent<HTMLButtonElement> | React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        const data = await request('/api/profile/updateinfo', 'POST', { ...form }, {\n            Authorization: `Bearer ${auth.token}`\n        })\n\n        if (data) {\n            // WTF\n            const req = { user: form, history: props.profile.history }\n            props.setData(req)\n            auth.login(auth.token, auth.userId, auth.userCount, auth.email, form.userName)\n        }\n    }\n\n    return (\n        <ProfileEditForm\n            loading={loading}\n            form={form}\n            changeHandler={changeHandler}\n            editHandler={editHandler}\n        />\n    )\n}\n\nfunction mapStateToProps(state: any) {\n    return {\n        profile: state.profilePage\n    }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        setData: (data: IProfileData) => dispatch(setProfileData(data)),\n        setEdit: () => dispatch(setProfileEdit()),\n        updateData: (form: IProfileData) => dispatch(updateProfileData(form))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEdit)","import React from 'react'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { IProfileData } from '../../../interfaces/interfaces'\nimport './profile.header.scss'\n\ntype ProfileHeaderProps = {\n    profile: IProfileData\n    setEdit: () => void\n}\n\nconst ProfileHeader:React.FC<ProfileHeaderProps> = (props) => {\n    const { profile, setEdit } = props\n    const { userName } = profile\n    return (\n        <div className=\"profile__header\">\n            <div itemProp=\"additionalName\" className=\"profile__header-nickname\">\n                {userName}\n            </div>\n            <div className=\"profile__header-edit\">\n                <FontAwesomeIcon icon={faEdit} onClick={setEdit} />\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileHeader\n","import React from 'react'\n\ntype ProfileHistoryTableItemProps = {\n  amount: number\n  link: string\n  genre: string\n  trafic: string\n  price: number\n  code: string\n  idx: number | undefined\n}\n\n\nconst ProfileHistoryTableItem: React.FC<ProfileHistoryTableItemProps> = (props) => {\n  const { idx, link, trafic, genre, amount, price } = props\n  const totalprice: number = amount * price\n  return (\n    <div className=\"history-table-block\">\n      <span> {idx} </span>\n      <span>\n        <a itemProp=\"identifier\" target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\n          {link.substr(21)}\n        </a>\n      </span>\n      <span> {trafic} </span>\n      <span> {genre} </span>\n      <span> {amount} </span>\n      <span itemProp=\"price\"> {totalprice}$ </span>\n    </div>\n  )\n}\n\nexport default ProfileHistoryTableItem","import React, { Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { IProfileData } from '../../../interfaces/interfaces'\nimport ProfileHistoryTableItem from './profile.history.table'\nimport './profile.info.scss'\n\ntype ProfileInfoProps = {\n    profile: IProfileData\n}\n\nconst ProfileInfo: React.FC<ProfileInfoProps> = (props) => {\n    const { about, history } = props.profile\n\n    type historyElement = {\n        amount: number\n        link: string\n        genre: string\n        trafic: string\n        price: number\n        code: string\n    }\n\n    return (\n        <div className=\"profile__info\">\n            <div className=\"profile__about profile__block\">\n                <h3 className=\"profile__title\">about me</h3>\n                <div>\n                    {about}\n                </div>\n            </div>\n            <div className=\"profile__history profile__block\" >\n                <h3 className=\"profile__title\">History</h3>\n\n                {\n                    !history\n                        ? <div>You don't have promoted history</div>\n                        : <Fragment>\n                            <h3>Total: {history.length} </h3>\n                            <div className=\"profile__history-table\">\n                                <div className=\"history-table-block table-title-block\">\n                                    <span> # </span>\n                                    <span itemProp=\"identifier\"> Link </span>\n                                    <span> View </span>\n                                    <span> Genre </span>\n                                    <span> Amount </span>\n                                    <span itemProp=\"price\"> Total price </span>\n                                </div>\n                                {\n                                    history.map((el: historyElement) => {\n                                        return (\n                                            <Fragment key={el.code}>\n                                                <ProfileHistoryTableItem idx={1} {...el} />\n                                            </Fragment>\n                                        )\n                                    })\n                                }\n                            </div>\n\n                        </Fragment>\n                }\n            </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state: any) {\n    return {\n        profile: state.profilePage\n    }\n}\n\nexport default connect(mapStateToProps)(ProfileInfo)\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope, faPhoneAlt, faLocationArrow, faFileUpload } from '@fortawesome/free-solid-svg-icons'\nimport { Spinner } from '../../spinner/spinner'\nimport defaultUser from '../../../img/User.jpg'\nimport './profile.main.scss'\n\nconst ProfileMainInfo = ({ profile, loading, handleFileSelect }) => {\n\n  const { birthday, languages, email, phoneNumber, locationProfile, age, img } = profile\n  return (\n    <div className=\"profile__main-info\">\n      <div className=\"profile__personal profile__block\">\n        {\n          loading\n            ? <Spinner />\n            : <div className=\"profile__image\">\n              <img className=\"profile__userImg\"\n                itemProp=\"image\"\n                src={img === '' ? defaultUser : `data:image/png;base64,${img}`}\n                alt={defaultUser}\n              />\n              <div className=\"profile__image-upload\">\n                <label htmlFor=\"file-input\">\n                  <FontAwesomeIcon className=\"profile__uploadIcon\" icon={faFileUpload} />\n                </label>\n                <input onChange={handleFileSelect} className=\"file-input\" id=\"file-input\" type=\"file\" />\n              </div>\n            </div>\n        }\n        <h3 className=\"profile__title\">Personal</h3>\n        <div className=\"profile__personal-content\">\n          <div className=\"profile__personal-title\">\n            <span itemProp=\"birthDate\">Birthday</span>\n            <span>Age</span>\n            <span>Languages</span>\n          </div>\n          <div className=\"profile__personal-desc\">\n            <span itemProp=\"birthDate\">&nbsp;:&nbsp; {birthday} </span>\n            <span>&nbsp;:&nbsp; {age} </span>\n            <span>&nbsp;:&nbsp; {languages}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"profile__contact profile__block\">\n        <h3 itemProp=\"contactPoint\" className=\"profile__title\">Contact</h3>\n        <div className=\"profile__contact-content\">\n          <div className=\"profile__contact-icons\">\n            <span itemProp=\"email\"><FontAwesomeIcon icon={faEnvelope} /></span>\n            <span itemProp=\"telephone\"><FontAwesomeIcon icon={faPhoneAlt} /></span>\n            <span itemProp=\"address\"><FontAwesomeIcon icon={faLocationArrow} /></span>\n          </div>\n          <div className=\"profile__contact-desc\">\n            <span itemProp=\"email\">&nbsp;:&nbsp; {email} </span>\n            <span itemProp=\"telephone\">&nbsp;:&nbsp; {phoneNumber} </span>\n            <span itemProp=\"address\">&nbsp;:&nbsp; {locationProfile} </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileMainInfo","import React, { useContext } from 'react'\nimport { connect } from 'react-redux'\nimport { useHttp } from '../../../hooks/http.hook'\nimport { AuthContext } from '../../../context/auth.context'\nimport { updateProfileImg } from '../../../redux/reducers/profile.reducer'\nimport { IMapState } from '../../../interfaces/interfaces'\nimport ProfileMainInfo from './profile.main.js'\nimport './profile.main.scss'\n\n\nconst ProfileMainInfoContainer = (props: any) => {\n  const { request, loading } = useHttp()\n  const auth = useContext(AuthContext)\n\n  const handleFileSelect: any = (evt: any) => {\n    const f = evt.target.files[0]\n    const reader = new FileReader()\n    reader.onload = (function (theFile) {\n      return async function (e: any) {\n        var binaryData = e.target.result\n        const base64String = window.btoa(binaryData)\n        try {\n          const imgReq = await request(\n            '/api/profile/updateimg',\n            'POST',\n            { email: auth.email, img: base64String },\n            {\n              Authorization: `Bearer ${auth.token}`\n            }\n          )\n          if (!imgReq) {\n            return console.log('poka')\n          } else {\n            props.updateImg(base64String)\n          }\n\n        } catch (e) {\n          throw e\n        }\n      }\n    })(f)\n    if (!f) {\n      return null\n    }\n    reader.readAsBinaryString(f)\n  }\n\n  return <ProfileMainInfo handleFileSelect={handleFileSelect} profile={props.profile} loading={loading} />\n}\n\nfunction mapStateToProps(state: IMapState) {\n  return {\n    profile: state.profilePage\n  }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    updateImg: (img: any) => dispatch(updateProfileImg(img))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileMainInfoContainer)\n","import React, { Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { IProfileData } from '../../interfaces/interfaces'\nimport { setProfileEdit } from '../../redux/reducers/profile.reducer'\nimport ProfileEdit from './profile-edit/profile.edit'\nimport ProfileHeader from './profile-header/profile.header'\nimport ProfileInfo from './profile-info/profile.info'\nimport ProfileMainInfoContainer from './profile-main/profile.main.container';\nimport './profile.scss'\n\ntype ProfilePageProps = {\n    profile: IProfileData\n    setEdit: () => void\n}\n\nconst ProfilePage: React.FC<ProfilePageProps> = (props) => {\n    const { setEdit, profile } = props\n    return (\n        <div className=\"page\">\n            <div itemScope itemProp=\"http://schema.org/Person\" className=\"profile__inside__page\">\n                <div className=\"profile__page-content\">\n                    {\n                        props.profile.edit\n                            ? <ProfileEdit />\n                            : <Fragment>\n                                <ProfileHeader setEdit={setEdit} profile={profile} />\n                                <div className=\"profile__content\">\n                                    <ProfileMainInfoContainer />\n                                    <ProfileInfo />\n                                </div>\n                            </Fragment>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state: any) {\n    return {\n        profile: state.profilePage\n    }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        setEdit: () => dispatch(setProfileEdit())\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage)","import React, { useEffect, useContext, Fragment, useCallback } from 'react'\nimport { connect } from 'react-redux';\nimport { setProfileData } from '../../redux/reducers/profile.reducer'\nimport { setProfileEdit } from '../../redux/reducers/profile.reducer'\nimport { IProfileData } from '../../interfaces/interfaces'\nimport { useHttp } from '../../hooks/http.hook'\nimport ProfilePage from './profile'\nimport { AuthContext } from '../../context/auth.context'\nimport { Spinner } from '../spinner/spinner'\n\nconst ProfileContainer = (props: any) => {\n    const { request, loading } = useHttp()\n    const auth = useContext(AuthContext)\n\n    const setUserData = useCallback(\n        async() => {\n            try {\n                const data = await request(\n                    '/api/profile/getinfo',\n                    'POST',\n                    {\n                        email: auth.email,\n                        userId: auth.userId\n                    },\n                    {\n                        Authorization: `Bearer ${auth.token}`\n                    }\n                )\n                props.setData(data)\n    \n            } catch (e) {\n                throw new Error(e)\n            }\n        },\n        [auth.email, auth.userId, auth.token, request, props.setData],\n    )\n\n    useEffect((): any => {\n        setUserData()\n    }, [auth.email, auth.userId, auth.token, request, props.setData, setUserData])\n\n    return (\n        <Fragment>\n            {\n                loading\n                    ? <Spinner />\n                    : <ProfilePage />\n            }\n        </Fragment>\n    )\n}\n\nfunction mapStateToProps(state: any) {\n    return {\n        profile: state.profilePage\n    }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        setData: (data: IProfileData) => dispatch(setProfileData(data)),\n        setEdit: () => dispatch(setProfileEdit())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer)","import { useState, useCallback } from 'react'\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n        setLoading(true)\n        try {\n            if (body) {\n                body = JSON.stringify(body)\n                headers['Content-Type'] = 'application/json'\n            }\n\n            const response = await fetch(url, { method, body, headers })\n            const data = await response.json()\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Try again')\n            }\n\n            setLoading(false)\n\n            return data\n        } catch (e) {\n            setLoading(false)\n            setError(e.message)\n            throw e\n        }\n    }, [])\n\n    const clearError = () => setError(null)\n\n    return { loading, request, error, clearError }\n}"],"sourceRoot":""}